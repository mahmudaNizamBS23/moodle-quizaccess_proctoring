name: Moodle Plugin CI
 
on: [push, pull_request]
 
jobs:
  test:
    runs-on: ubuntu-22.04
 
    services:
      mariadb:
        image: mariadb:10
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_CHARACTER_SET_SERVER: "utf8mb4"
          MYSQL_COLLATION_SERVER: "utf8mb4_unicode_ci"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 3
 
    strategy:
      fail-fast: false
      matrix:
        php: ['8.3']
        moodle-branch: ['MOODLE_405_STABLE']
        database: [mariadb]
 
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: ./mod/quiz/accessrule/proctoring
 
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ matrix.extensions }}
          ini-values: max_input_vars=5000
          coverage: none
 
      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^4
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV
 
      - name: Install moodle-plugin-ci
        run: moodle-plugin-ci install --plugin ./mod/quiz/accessrule/proctoring --db-host=127.0.0.1 --no-plugin-node
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}
 
      - name: PHP Code Beautifier Fixer
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci phpcbf mod/quiz/accessrule/proctoring
 
      - name: PHP Lint
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci phplint mod/quiz/accessrule/proctoring
 
      - name: PHP Mess Detector
        continue-on-error: true
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci phpmd mod/quiz/accessrule/proctoring
 
      - name: Moodle Code Checker
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci phpcs mod/quiz/accessrule/proctoring
 
      - name: Moodle PHPDoc Checker
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci phpdoc mod/quiz/accessrule/proctoring
 
      - name: Validating
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci validate mod/quiz/accessrule/proctoring
 
      - name: Check upgrade savepoints
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci savepoints mod/quiz/accessrule/proctoring
 
      - name: Mustache Lint
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci mustache mod/quiz/accessrule/proctoring
 
      - name: Grunt
        if: ${{ !cancelled() }}
        # run: moodle-plugin-ci grunt --max-lint-warnings 0 mod/quiz/accessrule/proctoring --force
        run: moodle-plugin-ci grunt  mod/quiz/accessrule/proctoring || true
 
 
      - name: PHPUnit tests
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci phpunit --fail-on-warning mod/quiz/accessrule/proctoring
 
      - name: Behat features
        id: behat
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci behat --profile chrome mod/quiz/accessrule/proctoring
 
      - name: Upload Behat Faildump
        if: ${{ failure() && steps.behat.outcome == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: Behat Faildump (${{ join(matrix.*, ', ') }})
          path: ${{ github.workspace }}/moodledata/behat_dump
          retention-days: 7
          if-no-files-found: ignore
 
      - name: Mark cancelled jobs as failed.
        if: ${{ cancelled() }}
        run: exit 1
 